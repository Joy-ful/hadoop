public class ReadLocalJson implements JsonDeserializer<RootNode> {
    public static void main(String[] args) {
        // Configure Gson
        GsonBuilder gsonBuilder = new GsonBuilder();
        gsonBuilder.registerTypeAdapter(RootNode.class, new ReadLocalJson());
        Gson gson = gsonBuilder.create();

        // The JSON data
        try (Reader reader = new InputStreamReader(getResourceAsStream("file////D:\\临时目录\\osgbCity_fire\\tileset.json"), "UTF-8")) {

            // Parse JSON to Java
            RootNode book = gson.fromJson(reader, RootNode.class);
            System.out.println(book);
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    //读取本地文件json
    public void read() throws IOException {
        String path = "D:\\临时目录\\osgbCity_fire\\tileset.json";
        RootNode rootNode = new RootNode();
        float geometricError = rootNode.getGeometricError();
        System.out.println(geometricError);


    }

    @Override
    public RootNode deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext jsonDeserializationContext) throws JsonParseException {
        JsonObject jsonObject = jsonElement.getAsJsonObject();

        JsonElement jsonTitle = jsonObject.get("geometricError");
        float title = Float.parseFloat(jsonTitle.getAsString());
        System.out.println(title);

        final RootNode book = new RootNode();
        book.setGeometricError(title);
        return book;
    }
}


/* public static String readJsonFile(String fileName) {
        String jsonStr = "";
        try {
            File jsonFile = new File(fileName);
            FileReader fileReader = new FileReader(jsonFile);
            Reader reader = new InputStreamReader(new FileInputStream(jsonFile),"utf-8");
            int ch = 0;
            StringBuffer sb = new StringBuffer();
            while ((ch = reader.read()) != -1) {
                sb.append((char) ch);
            }
            fileReader.close();
            reader.close();
            jsonStr = sb.toString();
            return jsonStr;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }*/